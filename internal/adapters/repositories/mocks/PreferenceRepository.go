// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	types "github.com/robstave/rto/internal/domain/types"
)

// PreferenceRepository is an autogenerated mock type for the PreferenceRepository type
type PreferenceRepository struct {
	mock.Mock
}

// GetPreferences provides a mock function with given fields:
func (_m *PreferenceRepository) GetPreferences() (types.Preferences, error) {
	ret := _m.Called()

	var r0 types.Preferences
	if rf, ok := ret.Get(0).(func() types.Preferences); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(types.Preferences)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdatePreferences provides a mock function with given fields: prefs
func (_m *PreferenceRepository) UpdatePreferences(prefs types.Preferences) error {
	ret := _m.Called(prefs)

	var r0 error
	if rf, ok := ret.Get(0).(func(types.Preferences) error); ok {
		r0 = rf(prefs)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewPreferenceRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewPreferenceRepository creates a new instance of PreferenceRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPreferenceRepository(t mockConstructorTestingTNewPreferenceRepository) *PreferenceRepository {
	mock := &PreferenceRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
